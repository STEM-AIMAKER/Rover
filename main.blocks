<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="gSCN1x){Gb**`R+GrAwq" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="y^/=%YlQ6;0tAEA)}KQc" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace HSCoBot {" line1="    let serialInited = 0;" line2="    let serialReadLine = &quot;&quot;;" line3="    " line4="    export enum CarMode {" line5="        //% blockId=&quot;Manual&quot; block=&quot;Manual&quot;" line6="        Manual = 0," line7="        //% blockId=&quot;AIDrive&quot; block=&quot;AI&quot;" line8="        AIDrive = 1," line9="        //% blockId=&quot;BallTracking&quot; block=&quot;Ball Tracking&quot;" line10="        BallTracking=2," line11="        //% blockId=&quot;PersonDetect&quot; block=&quot;Person Detect&quot;" line12="        PersonDetect=3," line13="        //% blockId=&quot;FaceDetect&quot; block=&quot;Face Detect&quot;" line14="        FaceDetect=4" line15="    }" line16="" line17="    export enum ColorFilter {" line18="        //% blockId=&quot;Red&quot; block=&quot;Red&quot;" line19="        Red = 0," line20="        //% blockId=&quot;Green&quot; block=&quot;Green&quot;" line21="        Green = 1," line22="        //% blockId=&quot;Blue&quot; block=&quot;Blue&quot;" line23="        Blue = 2," line24="        //% blockId=&quot;Black&quot; block=&quot;Black&quot;" line25="        Black = 3" line26="    }" line27="" line28="    export enum Directions {" line29="        //% blockId=&quot;Positive&quot; block=&quot;Positive&quot;" line30="        Positive = 0," line31="        //% blockId=&quot;Negative&quot; block=&quot;Negative&quot;" line32="        Negative = 1" line33="    }" line34="" line35="    function initSerial(): void {" line36="        if (0 == serialInited) {" line37="            serial.setRxBufferSize(64)" line38="            serial.redirect(" line39="                SerialPin.P16," line40="                SerialPin.P8," line41="                BaudRate.BaudRate115200" line42="            );" line43="            serialInited = 1;" line44="        }" line45="    }" line46="" line47="    function addParameter(i: number): string {" line48="        let str = &quot;&quot;;" line49="        if (i &lt; 10) {" line50="            str = &quot;00&quot; + i;" line51="        } else if (i &lt; 100) {" line52="            str = &quot;0&quot; + i;" line53="        } else {" line54="            str = (i).toString();" line55="        }" line56="        return str;" line57="    }" line58="" line59="    //% weight=90" line60="    //% blockId=runMotor block=&quot;Manual mode run motor at left speed=%LeftSpeed direction=%LeftDirection ï¼Œright speed=%RightSpeed direction=%RightDirection&quot;" line61="    //% LeftSpeed.min=0 LeftSpeed.max=360" line62="    //% LeftDirection.fieldEditor=&quot;gridpicker&quot; LeftDirection.fieldOptions.columns=1" line63="    //% RightSpeed.min=0 RightSpeed.max=360" line64="    //% RightDirection.fieldEditor=&quot;gridpicker&quot; RightDirection.fieldOptions.columns=1" line65="    export function runMotor( LeftSpeed: number, LeftDirection: Directions, RightSpeed : number, RightDirection : Directions): void {" line66="        initSerial();" line67="        let cmd = &quot;&quot;;" line68="        let LD = &quot;1&quot;" line69="        let RD = &quot;1&quot;" line70="        if (LeftDirection == Directions.Negative)" line71="            LD = &quot;0&quot;" line72="        if (RightDirection == Directions.Negative)" line73="            RD = &quot;0&quot;" line74="" line75="        cmd = &quot;CM&quot; + LD + RD + addParameter(LeftSpeed) + addParameter(RightSpeed);" line76="        serial.writeLine(cmd);" line77="    }" line78="" line79="    //% weight=90" line80="    //% blockId=stopCar block=&quot;Stop car in manual mode&quot;" line81="    export function stopCar(): void {" line82="        runMotor(0, Directions.Positive, 0, Directions.Positive);" line83="    }" line84="" line85="    //% weight=90" line86="    //% blockId=pauseAI block=&quot;Pause AI Model&quot;" line87="    export function pauseAI(): void {" line88="        initSerial();" line89="        let cmd2 = &quot;EXPS+++++0&quot;; // Pause" line90="        serial.writeLine(cmd2);" line91="    }" line92="" line93="    //% weight=90" line94="    //% blockId=resumeAI block=&quot;Resume AI Model&quot;" line95="    export function resumeAI(): void {" line96="        initSerial();" line97="        let cmd3 = &quot;EXPS+++++1&quot;; " line98="        serial.writeLine(cmd3);" line99="    }" line100="" line101="    //% weight=90" line102="    //% blockId=rebootAIModule block=&quot;Reboot AI module&quot;" line103="    export function rebootAIModule():void {" line104="        let cmd4 = &quot;EXRS++++++&quot;" line105="        initSerial();" line106="        serial.writeLine(cmd4);" line107="        basic.pause(3000)" line108="    }" line109="" line110="    //% weight=90" line111="    //% blockId=switchAIMode block=&quot;Switch car mode to |%mode&quot;" line112="    //% mode.fieldEditor=&quot;gridpicker&quot; mode.fieldOptions.columns=2" line113="    export function switchAIMode(mode: CarMode): void {" line114="        let cmd5 = &quot;&quot;;" line115="        initSerial();" line116="        switch (mode) {" line117="            case CarMode.Manual:" line118="                cmd5 = &quot;EXPS+++++0&quot;; // Pause" line119="                break;" line120="            case CarMode.AIDrive:" line121="                cmd5 = &quot;EXMO+++++0&quot;" line122="                break;" line123="            case CarMode.BallTracking:" line124="                cmd5 = &quot;EXMO+++++1&quot;" line125="                break;" line126="            case CarMode.PersonDetect:" line127="                cmd5 = &quot;EXMO+++++2&quot;" line128="                break;" line129="            case CarMode.FaceDetect:" line130="                cmd5 = &quot;EXMO+++++3&quot;" line131="                break;" line132="        }" line133="" line134="        if (cmd5.length &gt; 0) {" line135="            serial.writeLine(cmd5);" line136="            basic.pause(100);" line137="        }" line138="    }" line139="  " line140="    //% weight=90" line141="    //% blockId=changeAIColor block=&quot;Change AI color to |%color&quot;" line142="    //% color.fieldEditor=&quot;gridpicker&quot; color.fieldOptions.columns=2" line143="    export function changeAIColor(color: ColorFilter): void {" line144="        let cmd6 = &quot;EXCO+++++&quot; + (color).toString();" line145="        initSerial();       " line146="        serial.writeLine(cmd6);" line147="        basic.pause(100);" line148="    }" line149="" line150="    //% weight=90" line151="    //% blockId=turnOnLED block=&quot;Turn on LED lights&quot;" line152="    export function turnOnLED() : void {" line153="        initSerial();" line154="        serial.writeLine(&quot;CHON&quot;);" line155="    }" line156="    " line157="    //% weight=90" line158="    //% blockId=turnOffLED block=&quot;Turn off LED lights&quot;" line159="    export function turnOffLED(): void {" line160="        initSerial();" line161="        serial.writeLine(&quot;CHOFF&quot;);" line162="    }" line163="" line164="    //% weight=90" line165="    //% blockId=turnOnBuzzer block=&quot;Turn on buzzer&quot;" line166="    export function turnOnBuzzer() : void {" line167="        initSerial();" line168="        serial.writeLine(&quot;CBON&quot;);" line169="    }" line170="" line171="    //% weight=90" line172="    //% blockId=turnOffBuzzer block=&quot;Turn off buzzer&quot;" line173="    export function turnOffBuzzer(): void {" line174="        initSerial();" line175="        serial.writeLine(&quot;CBOFF&quot;);" line176="    }" line177="" line178="    //% weight=90" line179="    //% blockId=queryBattery block=&quot;Query car battery&quot;" line180="    export function queryBattery() : void {" line181="        initSerial();" line182="        serial.writeLine(&quot;CTINFO&quot;);" line183="    }" line184="" line185="    //% weight=90" line186="    //% blockId=setRGBColor block=&quot;set car left RGB light=%leftRGB right RGB=%rightRGB&quot;" line187="    //% leftRGB.shadow=&quot;colorNumberPicker&quot;" line188="    //% rightRGB.shadow=&quot;colorNumberPicker&quot;" line189="    export function setRGBColor(leftRGB: number, rightRGB: number) : void {" line190="" line191="    }" line192="" line193="    serial.onDataReceived(serial.delimiters(Delimiters.NewLine), function () {" line194="        serialReadLine = serial.readLine();" line195="        console.log(&quot;serial read:&quot; + serialReadLine)" line196="    })" line197="" line198="    //% weight=80" line199="    //% blockId=connectWIFI block=&quot;connect to WIFI, ssid=%ssid password=%pin&quot;" line200="    export function connectWIFI(ssid: string, password: string) : void {" line201="        let cmdConnect = &quot;AT+CWJAP_DEF=\&quot;&quot; + ssid + &quot;\&quot;,\&quot;&quot; + password + &quot;\&quot;&quot;" line202="        serial.writeString(cmdConnect)" line203="        serial.readString()" line204="        basic.pause(5000)" line205="    }" line206="" line207="    //% weight=80" line208="    //% blockId=setWifiWaitforConnect block=&quot;Set WIFI enter wait for connect mode&quot;" line209="    export function setWifiWaitforConnect() : void {" line210="" line211="    }" line212="" line213="    //% weight=80" line214="    //% blockId=exitWifiWaitforConnect block=&quot;Set WIFI exit wait for connect mode&quot;" line215="    export function exitWifiWaitforConnect() : void {" line216="" line217="    }" line218="}" numlines="219"></mutation><comment id="undefined" pinned="false" h="80" w="160">% weight=10 color=#1E90FF icon="\uf136"</comment></block></statement></block></xml>