<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="n1l?uWZ)b0mL,#d(3aGt" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="J$`b+^zi9DQGQo*5n^La" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace hscobot {" line1="    let serialInited = 0;" line2="    let serialReadLine = &quot;&quot;;" line3="    " line4="    export enum CarMode {" line5="        //% blockId=&quot;Manual&quot; block=&quot;Manual&quot;" line6="        Manual = 0," line7="        //% blockId=&quot;AIDrive&quot; block=&quot;AI&quot;" line8="        AIDrive = 1," line9="        //% blockId=&quot;BallTracking&quot; block=&quot;Ball Tracking&quot;" line10="        BallTracking=2," line11="        //% blockId=&quot;PersonDetect&quot; block=&quot;Person Detect&quot;" line12="        PersonDetect=3," line13="        //% blockId=&quot;FaceDetect&quot; block=&quot;Face Detect&quot;" line14="        FaceDetect=4" line15="    }" line16="" line17="    export enum ColorFilter {" line18="        //% blockId=&quot;Red&quot; block=&quot;Red&quot;" line19="        Red = 0," line20="        //% blockId=&quot;Green&quot; block=&quot;Green&quot;" line21="        Green = 1," line22="        //% blockId=&quot;Blue&quot; block=&quot;Blue&quot;" line23="        Blue = 2," line24="        //% blockId=&quot;Black&quot; block=&quot;Black&quot;" line25="        Black = 3" line26="    }" line27="" line28="    export enum Directions {" line29="        //% blockId=&quot;Positive&quot; block=&quot;Positive&quot;" line30="        Positive = 0," line31="        //% blockId=&quot;Negative&quot; block=&quot;Negative&quot;" line32="        Negative = 1" line33="    }" line34="" line35="    function initSerial(): void {" line36="        if (0 == serialInited) {" line37="            serial.setRxBufferSize(64)" line38="            serial.redirect(" line39="                SerialPin.P16," line40="                SerialPin.P8," line41="                BaudRate.BaudRate115200" line42="            );" line43="            serialInited = 1;" line44="        }" line45="    }" line46="" line47="    function addParameter(i: number): string {" line48="        let str = &quot;&quot;;" line49="        if (i &lt; 10) {" line50="            str = &quot;00&quot; + i;" line51="        } else if (i &lt; 100) {" line52="            str = &quot;0&quot; + i;" line53="        } else {" line54="            str = (i).toString();" line55="        }" line56="        return str;" line57="    }" line58="" line59="   " line60="    //% blockId=runMotor block=&quot;Manual mode run motor at left speed=%LeftSpeed direction=%LeftDirection right speed=%RightSpeed direction=%RightDirection&quot;" line61="    //% LeftSpeed.min=0 LeftSpeed.max=360" line62="    //% LeftDirection.fieldEditor=&quot;gridpicker&quot; LeftDirection.fieldOptions.columns=1" line63="    //% RightSpeed.min=0 RightSpeed.max=360" line64="    //% RightDirection.fieldEditor=&quot;gridpicker&quot; RightDirection.fieldOptions.columns=1" line65="    export function runMotor( LeftSpeed: number, LeftDirection: Directions, RightSpeed : number, RightDirection : Directions): void {" line66="        initSerial();" line67="        let cmd = &quot;&quot;;" line68="        let LD = &quot;1&quot;" line69="        let RD = &quot;1&quot;" line70="        if (LeftDirection == Directions.Negative)" line71="            LD = &quot;0&quot;" line72="        if (RightDirection == Directions.Negative)" line73="            RD = &quot;0&quot;" line74="" line75="        cmd = &quot;CM&quot; + LD + RD + addParameter(LeftSpeed) + addParameter(RightSpeed);" line76="        serial.writeLine(cmd);" line77="    }" line78="" line79="    //% blockId=stopCar block=&quot;Stop car in manual mode&quot;" line80="    export function stopCar(): void {" line81="        runMotor(0, Directions.Positive, 0, Directions.Positive);" line82="    }" line83="" line84="    //% blockId=pauseAI block=&quot;Pause AI Model&quot;" line85="    export function pauseAI(): void {" line86="        initSerial();" line87="        let cmd2 = &quot;EXPS+++++0&quot;; // Pause" line88="        serial.writeLine(cmd2);" line89="    }" line90="" line91="    //% blockId=resumeAI block=&quot;Resume AI Model&quot;" line92="    export function resumeAI(): void {" line93="        initSerial();" line94="        let cmd3 = &quot;EXPS+++++1&quot;; " line95="        serial.writeLine(cmd3);" line96="    }" line97="" line98="    //% blockId=rebootAIModule block=&quot;Reboot AI module&quot;" line99="    export function rebootAIModule():void {" line100="        let cmd4 = &quot;EXRS++++++&quot;" line101="        initSerial();" line102="        serial.writeLine(cmd4);" line103="        basic.pause(3000)" line104="    }" line105="" line106="    //% weight=90" line107="    //% blockId=switchAIMode block=&quot;Switch car mode to |%mode&quot;" line108="    //% mode.fieldEditor=&quot;gridpicker&quot; mode.fieldOptions.columns=2" line109="    export function switchAIMode(mode: CarMode): void {" line110="        let cmd5 = &quot;&quot;;" line111="        initSerial();" line112="        switch (mode) {" line113="            case CarMode.Manual:" line114="                cmd5 = &quot;EXPS+++++0&quot;; // Pause" line115="                break;" line116="            case CarMode.AIDrive:" line117="                cmd5 = &quot;EXMO+++++0&quot;" line118="                break;" line119="            case CarMode.BallTracking:" line120="                cmd5 = &quot;EXMO+++++1&quot;" line121="                break;" line122="            case CarMode.PersonDetect:" line123="                cmd5 = &quot;EXMO+++++2&quot;" line124="                break;" line125="            case CarMode.FaceDetect:" line126="                cmd5 = &quot;EXMO+++++3&quot;" line127="                break;" line128="        }" line129="" line130="        if (cmd5.length &gt; 0) {" line131="            serial.writeLine(cmd5);" line132="            basic.pause(100);" line133="        }" line134="    }" line135="  " line136="    //% weight=90" line137="    //% blockId=changeAIColor block=&quot;Change AI color to |%color&quot;" line138="    //% color.fieldEditor=&quot;gridpicker&quot; color.fieldOptions.columns=2" line139="    export function changeAIColor(color: ColorFilter): void {" line140="        let cmd6 = &quot;EXCO+++++&quot; + (color).toString();" line141="        initSerial();       " line142="        serial.writeLine(cmd6);" line143="        basic.pause(100);" line144="    }" line145="" line146="    //% blockId=turnOnLED block=&quot;Turn on LED lights&quot;" line147="    export function turnOnLED() : void {" line148="        initSerial();" line149="        serial.writeLine(&quot;CHON&quot;);" line150="    }" line151="    " line152="    //% blockId=turnOffLED block=&quot;Turn off LED lights&quot;" line153="    export function turnOffLED(): void {" line154="        initSerial();" line155="        serial.writeLine(&quot;CHOFF&quot;);" line156="    }" line157="" line158="    //% blockId=turnOnBuzzer block=&quot;Turn on buzzer&quot;" line159="    export function turnOnBuzzer() : void {" line160="        initSerial();" line161="        serial.writeLine(&quot;CBON&quot;);" line162="    }" line163="" line164="    //% blockId=turnOffBuzzer block=&quot;Turn off buzzer&quot;" line165="    export function turnOffBuzzer(): void {" line166="        initSerial();" line167="        serial.writeLine(&quot;CBOFF&quot;);" line168="    }" line169="" line170="    //% blockId=queryBattery block=&quot;Query car battery&quot;" line171="    export function queryBattery() : void {" line172="        initSerial();" line173="        serial.writeLine(&quot;CTINFO&quot;);" line174="    }" line175="" line176="    //% blockId=setRGBColor block=&quot;set car left RGB light=%leftRGB right RGB=%rightRGB&quot;" line177="    //% leftRGB.shadow=&quot;colorNumberPicker&quot;" line178="    //% rightRGB.shadow=&quot;colorNumberPicker&quot;" line179="    export function setRGBColor(leftRGB: number, rightRGB: number) : void {" line180="" line181="    }" line182="" line183="    serial.onDataReceived(serial.delimiters(Delimiters.NewLine), function () {" line184="        serialReadLine = serial.readLine();" line185="        console.log(&quot;serial read:&quot; + serialReadLine)" line186="    })" line187="" line188="    //% weight=120" line189="    //% blockId=connectWIFI block=&quot;connect to WIFI, ssid=%ssid password=%pin&quot;" line190="    export function connectWIFI(ssid: string, password: string) : void {" line191="        let cmdConnect = &quot;AT+CWJAP_DEF=\&quot;&quot; + ssid + &quot;\&quot;,\&quot;&quot; + password + &quot;\&quot;&quot;" line192="        serial.writeString(cmdConnect)" line193="        serial.readString()" line194="        basic.pause(5000)" line195="    }" line196="" line197="    //% weight=120" line198="    //% blockId=setWifiWaitforConnect block=&quot;Set WIFI enter wait for connect mode&quot;" line199="    export function setWifiWaitforConnect() : void {" line200="" line201="    }" line202="" line203="    //% weight=120" line204="    //% blockId=exitWifiWaitforConnect block=&quot;Set WIFI exit wait for connect mode&quot;" line205="    export function exitWifiWaitforConnect() : void {" line206="" line207="    }" line208="}" numlines="209"></mutation><comment id="undefined" pinned="false" h="80" w="160">% weight=10 color=#1E90FF icon="\uf136"</comment></block></statement></block></xml>